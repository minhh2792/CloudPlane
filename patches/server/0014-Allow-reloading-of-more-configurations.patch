From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Fri, 24 Sep 2021 21:24:42 +0200
Subject: [PATCH] Allow reloading of more configurations

This adds the possibility to reload the bukkit.yml and server.properties file.
It can be called using the API (Bukkit#reloadBukkit(), Bukkit#reloadProperties())
or as a command using /reload <bukkit|properties>.

diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 7d11fbb3db5c51784622cec2d28e453b2e99098e..13f7bce4120cba01cbb9765f52c34a8aa7e36424 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -2866,4 +2866,66 @@ public final class CraftServer implements Server {
     }
 
     // Paper end
+
+    // CloudPlane start
+    @Override
+    public void reloadBukkit() {
+        configuration = YamlConfiguration.loadConfiguration(getConfigFile());
+        pluginManager.useTimings(configuration.getBoolean("settings.plugin-profiling"));
+        overrideSpawnLimits();
+
+        warningState = WarningState.value(configuration.getString("settings.deprecated-verbose"));
+        TicketType.PLUGIN.timeout = Math.min(20, configuration.getInt("chunk-gc.period-in-ticks"));
+        minimumAPI = configuration.getString("settings.minimum-api");
+        console.autosavePeriod = configuration.getInt("ticks-per.autosave");
+
+        try {
+            playerList.getIpBans().load();
+        } catch (IOException exception) {
+            logger.log(Level.WARNING, "Failed to load banned-ips.json, " + exception.getMessage());
+        }
+
+        try {
+            playerList.getBans().load();
+        } catch (IOException exception) {
+            logger.log(Level.WARNING, "Failed to load banned-players.json, " + exception.getMessage());
+        }
+
+        for (ServerLevel level : console.getAllLevels()) {
+            for (SpawnCategory spawnCategory : SpawnCategory.values()) {
+                if (CraftSpawnCategory.isValidForLimits(spawnCategory)) {
+                    long ticksPerCategorySpawn = this.getTicksPerSpawns(spawnCategory);
+                    if (ticksPerCategorySpawn < 0) {
+                        level.ticksPerSpawnCategory.put(spawnCategory, CraftSpawnCategory.getDefaultTicksPerSpawn(spawnCategory));
+                    } else {
+                        level.ticksPerSpawnCategory.put(spawnCategory, ticksPerCategorySpawn);
+                    }
+                }
+            }
+        }
+    }
+
+    @Override
+    public void reloadProperties() {
+        console.settings = new DedicatedServerSettings(console.options);
+        DedicatedServerProperties config = console.settings.getProperties();
+
+        loadIcon();
+        console.setMotd(config.motd);
+        console.setPvpAllowed(config.pvp);
+        console.setPort(config.serverPort);
+        console.setLocalIp(config.serverIp);
+        console.setFlightAllowed(config.allowFlight);
+        console.setUsesAuthentication(config.onlineMode);
+        console.setEnforceWhitelist(config.enforceWhitelist);
+        console.setPlayerIdleTimeout(config.playerIdleTimeout.get());
+        console.setPreventProxyConnections(config.preventProxyConnections);
+        console.setResourcePack(config.resourcePack, console.getPackHash());
+
+        for (ServerLevel level : console.getAllLevels()) {
+            level.serverLevelData.setDifficulty(config.difficulty);
+            level.setSpawnSettings(config.spawnMonsters, config.spawnAnimals);
+        }
+    }
+    // CloudPlane end
 }
