From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Sun, 22 Aug 2021 20:30:16 +0200
Subject: [PATCH] localize item names and lore


diff --git a/src/main/java/io/papermc/paper/adventure/PaperAdventure.java b/src/main/java/io/papermc/paper/adventure/PaperAdventure.java
index 26c5c3c6e7c51ad6ccc9bac05e2af4972658179d..bf96c3b75a65cbd90a8aa306f9d716e8c8d1a3b4 100644
--- a/src/main/java/io/papermc/paper/adventure/PaperAdventure.java
+++ b/src/main/java/io/papermc/paper/adventure/PaperAdventure.java
@@ -379,4 +379,38 @@ public final class PaperAdventure {
     public static @Nullable ChatFormatting asVanilla(TextColor color) {
         return ChatFormatting.getByHexValue(color.value());
     }
+
+    // CloudPlane start - localize item names and lore
+    public static @Nullable ItemStack renderNMSItem(@Nullable ItemStack stack, @NonNull Locale locale) {
+        if (tk.booky.cloudplane.CloudPlaneConfig.localizeItems && stack != null && stack != ItemStack.EMPTY) {
+            CompoundTag display = (stack = stack.copy()).getTagElement("display");
+            if (display != null) {
+                if (display.contains("Name", 8)) {
+                    if (GSON.deserialize(display.getString("Name")) instanceof TranslatableComponent component) {
+                        display.putString("Name", asJsonString(component, locale));
+                    }
+                }
+
+                if (display.contains("Lore", 9)) {
+                    ListTag lore = display.getList("Lore", 8);
+                    for (int i = 0; i < lore.size(); i++) {
+                        if (GSON.deserialize(lore.getString(i)) instanceof TranslatableComponent component) {
+                            lore.set(i, StringTag.valueOf(asJsonString(component, locale)));
+                        }
+                    }
+                }
+            }
+        }
+        return stack;
+    }
+
+    public static net.minecraft.core.@Nullable NonNullList<ItemStack> renderNMSItems(net.minecraft.core.@Nullable NonNullList<ItemStack> stacks, @NonNull Locale locale) {
+        if (tk.booky.cloudplane.CloudPlaneConfig.localizeItems && stacks != null) {
+            for (int i = 0; i < stacks.size(); i++) {
+                stacks.set(i, renderNMSItem(stacks.get(i), locale));
+            }
+        }
+        return stacks;
+    }
+    // CloudPlane end
 }
diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket.java
index dbd8b9b09b82c1b75e8be9dc7416d9f0863c8c87..e9c60af6cc132998adb24f2d478acbab20a5d077 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket.java
@@ -35,7 +35,7 @@ public class ClientboundContainerSetContentPacket implements Packet<ClientGamePa
     @Override
     public boolean packetTooLarge(net.minecraft.network.Connection manager) {
         for (int i = 0 ; i < this.items.size() ; i++) {
-            manager.send(new ClientboundContainerSetSlotPacket(this.containerId, this.stateId, i, this.items.get(i)));
+            manager.send(new ClientboundContainerSetSlotPacket(this.containerId, this.stateId, i, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.items.get(i), manager.getPlayer().adventure$locale))); // CloudPlane - localize item names and lore
         }
         return true;
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 6a6019462c76b92a9f6644b175ea3403b01ad98d..0fa85628583e36e5f2682616faea1dfed60cc9af 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -279,7 +279,7 @@ public class ServerPlayer extends Player {
         this.containerSynchronizer = new ContainerSynchronizer() {
             @Override
             public void sendInitialData(AbstractContainerMenu handler, NonNullList<ItemStack> stacks, ItemStack cursorStack, int[] properties) {
-                ServerPlayer.this.connection.send(new ClientboundContainerSetContentPacket(handler.containerId, handler.incrementStateId(), stacks, cursorStack));
+                ServerPlayer.this.connection.send(new ClientboundContainerSetContentPacket(handler.containerId, handler.incrementStateId(), io.papermc.paper.adventure.PaperAdventure.renderNMSItems(stacks, adventure$locale), io.papermc.paper.adventure.PaperAdventure.renderNMSItem(cursorStack, adventure$locale))); // CloudPlane - localize item names and lore
 
                 for (int i = 0; i < properties.length; ++i) {
                     this.broadcastDataValue(handler, i, properties[i]);
@@ -289,12 +289,12 @@ public class ServerPlayer extends Player {
 
             @Override
             public void sendSlotChange(AbstractContainerMenu handler, int slot, ItemStack stack) {
-                ServerPlayer.this.connection.send(new ClientboundContainerSetSlotPacket(handler.containerId, handler.incrementStateId(), slot, stack));
+                ServerPlayer.this.connection.send(new ClientboundContainerSetSlotPacket(handler.containerId, handler.incrementStateId(), slot, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(stack, adventure$locale))); // CloudPlane - localize item names and lore
             }
 
             @Override
             public void sendCarriedChange(AbstractContainerMenu handler, ItemStack stack) {
-                ServerPlayer.this.connection.send(new ClientboundContainerSetSlotPacket(-1, handler.incrementStateId(), -1, stack));
+                ServerPlayer.this.connection.send(new ClientboundContainerSetSlotPacket(-1, handler.incrementStateId(), -1, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(stack, adventure$locale))); // CloudPlane - localize item names and lore
             }
 
             @Override
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 66b639a48609f1facc537dbf9ae6998d2abca28f..f0d82b077c26fa63b3579e9a8624f6a6e4b5367b 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -977,8 +977,8 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
         }
         this.player.getInventory().pickSlot(packet.getSlot()); // Paper - Diff above if changed
         // Paper end
-        this.player.connection.send(new ClientboundContainerSetSlotPacket(-2, 0, this.player.getInventory().selected, this.player.getInventory().getItem(this.player.getInventory().selected)));
-        this.player.connection.send(new ClientboundContainerSetSlotPacket(-2, 0, packet.getSlot(), this.player.getInventory().getItem(packet.getSlot())));
+        this.player.connection.send(new ClientboundContainerSetSlotPacket(-2, 0, this.player.getInventory().selected, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.player.getInventory().getItem(this.player.getInventory().selected), player.adventure$locale))); // CloudPlane - localize item names and lore
+        this.player.connection.send(new ClientboundContainerSetSlotPacket(-2, 0, packet.getSlot(), io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.player.getInventory().getItem(packet.getSlot()), player.adventure$locale))); // CloudPlane - localize item names and lore
         this.player.connection.send(new ClientboundSetCarriedItemPacket(this.player.getInventory().selected));
     }
 
@@ -2914,19 +2914,19 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
                                 case PLACE_SOME:
                                 case PLACE_ONE:
                                 case SWAP_WITH_CURSOR:
-                                    this.player.connection.send(new ClientboundContainerSetSlotPacket(-1, -1, this.player.inventoryMenu.incrementStateId(), this.player.containerMenu.getCarried()));
-                                    this.player.connection.send(new ClientboundContainerSetSlotPacket(this.player.containerMenu.containerId, this.player.inventoryMenu.incrementStateId(), packet.getSlotNum(), this.player.containerMenu.getSlot(packet.getSlotNum()).getItem()));
+                                    this.player.connection.send(new ClientboundContainerSetSlotPacket(-1, -1, this.player.inventoryMenu.incrementStateId(), io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.player.containerMenu.getCarried(), player.adventure$locale))); // CloudPlane - localize item names and lore
+                                    this.player.connection.send(new ClientboundContainerSetSlotPacket(this.player.containerMenu.containerId, this.player.inventoryMenu.incrementStateId(), packet.getSlotNum(), io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.player.containerMenu.getSlot(packet.getSlotNum()).getItem(), player.adventure$locale))); // CloudPlane - localize item names and lore
                                     break;
                                 // Modified clicked only
                                 case DROP_ALL_SLOT:
                                 case DROP_ONE_SLOT:
-                                    this.player.connection.send(new ClientboundContainerSetSlotPacket(this.player.containerMenu.containerId, this.player.inventoryMenu.incrementStateId(), packet.getSlotNum(), this.player.containerMenu.getSlot(packet.getSlotNum()).getItem()));
+                                    this.player.connection.send(new ClientboundContainerSetSlotPacket(this.player.containerMenu.containerId, this.player.inventoryMenu.incrementStateId(), packet.getSlotNum(), io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.player.containerMenu.getSlot(packet.getSlotNum()).getItem(), player.adventure$locale))); // CloudPlane - localize item names and lore
                                     break;
                                 // Modified cursor only
                                 case DROP_ALL_CURSOR:
                                 case DROP_ONE_CURSOR:
                                 case CLONE_STACK:
-                                    this.player.connection.send(new ClientboundContainerSetSlotPacket(-1, -1, this.player.inventoryMenu.incrementStateId(), this.player.containerMenu.getCarried()));
+                                    this.player.connection.send(new ClientboundContainerSetSlotPacket(-1, -1, this.player.inventoryMenu.incrementStateId(), io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.player.containerMenu.getCarried(), player.adventure$locale))); // CloudPlane - localize item names and lore
                                     break;
                                 // Nothing
                                 case NOTHING:
@@ -3051,7 +3051,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
                 case DENY:
                     // Reset the slot
                     if (packet.getSlotNum() >= 0) {
-                        this.player.connection.send(new ClientboundContainerSetSlotPacket(this.player.inventoryMenu.containerId, this.player.inventoryMenu.incrementStateId(), packet.getSlotNum(), this.player.inventoryMenu.getSlot(packet.getSlotNum()).getItem()));
+                        this.player.connection.send(new ClientboundContainerSetSlotPacket(this.player.inventoryMenu.containerId, this.player.inventoryMenu.incrementStateId(), packet.getSlotNum(), io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.player.inventoryMenu.getSlot(packet.getSlotNum()).getItem(), player.adventure$locale))); // CloudPlane - localize item names and lore
                         this.player.connection.send(new ClientboundContainerSetSlotPacket(-1, this.player.inventoryMenu.incrementStateId(), -1, ItemStack.EMPTY));
                     }
                     return;
diff --git a/src/main/java/net/minecraft/world/entity/player/Inventory.java b/src/main/java/net/minecraft/world/entity/player/Inventory.java
index 8d329bca0818033df41fbd781028919c73e052a6..3f3f4a9549b6762a1176391e0e549b0666c7a660 100644
--- a/src/main/java/net/minecraft/world/entity/player/Inventory.java
+++ b/src/main/java/net/minecraft/world/entity/player/Inventory.java
@@ -413,7 +413,7 @@ public class Inventory implements Container, Nameable {
                     int j = stack.getMaxStackSize() - this.getItem(i).getCount();
 
                     if (this.add(i, stack.split(j)) && notifiesClient && this.player instanceof ServerPlayer) {
-                        ((ServerPlayer) this.player).connection.send(new ClientboundContainerSetSlotPacket(-2, 0, i, this.getItem(i)));
+                        ((ServerPlayer) this.player).connection.send(new ClientboundContainerSetSlotPacket(-2, 0, i, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.getItem(i), ((ServerPlayer) player).adventure$locale))); // CloudPlane - localize item names and lore
                     }
                     continue;
                 }
diff --git a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
index ca05d8e5ff1b8caa07c0e4f3e203abd46d7a7ede..a16824b033303db5b97ddc55024588d484de5e6b 100644
--- a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
@@ -575,10 +575,10 @@ public abstract class AbstractContainerMenu {
                     slot.setChanged();
                     // CraftBukkit start - Make sure the client has the right slot contents
                     if (player instanceof ServerPlayer && slot.getMaxStackSize() != 64) {
-                        ((ServerPlayer) player).connection.send(new ClientboundContainerSetSlotPacket(this.containerId, this.incrementStateId(), slot.index, slot.getItem()));
+                        ((ServerPlayer) player).connection.send(new ClientboundContainerSetSlotPacket(this.containerId, this.incrementStateId(), slot.index, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(slot.getItem(), ((ServerPlayer) player).adventure$locale))); // CloudPlane - localize item names and lore
                         // Updating a crafting inventory makes the client reset the result slot, have to send it again
                         if (this.getBukkitView().getType() == InventoryType.WORKBENCH || this.getBukkitView().getType() == InventoryType.CRAFTING) {
-                            ((ServerPlayer) player).connection.send(new ClientboundContainerSetSlotPacket(this.containerId, this.incrementStateId(), 0, this.getSlot(0).getItem()));
+                            ((ServerPlayer) player).connection.send(new ClientboundContainerSetSlotPacket(this.containerId, this.incrementStateId(), 0, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(this.getSlot(0).getItem(), ((ServerPlayer) player).adventure$locale))); // CloudPlane - localize item names and lore
                         }
                     }
                     // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
index 9dd5dfc95049de84916bbbd63acb6125ec9ee0a0..70ca455500cf083ea603dfedb2420fe568c2ebe9 100644
--- a/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AnvilMenu.java
@@ -334,7 +334,7 @@ public class AnvilMenu extends ItemCombinerMenu {
             this.broadcastChanges();
             // Purpur start
             if ((canDoUnsafeEnchants || net.pl3x.purpur.PurpurConfig.allowUnsafeEnchants) && itemstack1 != ItemStack.EMPTY) {
-                ((ServerPlayer) player).connection.send(new ClientboundContainerSetSlotPacket(containerId, incrementStateId(), 2, itemstack1));
+                ((ServerPlayer) player).connection.send(new ClientboundContainerSetSlotPacket(containerId, incrementStateId(), 2, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(itemstack1, ((ServerPlayer) player).adventure$locale))); // CloudPlane - localize item names and lore
                 ((ServerPlayer) player).connection.send(new ClientboundContainerSetDataPacket(containerId, 0, cost.get()));
             }
             // Purpur end
diff --git a/src/main/java/net/minecraft/world/inventory/CraftingMenu.java b/src/main/java/net/minecraft/world/inventory/CraftingMenu.java
index e25417976ebe787cdeff88fa2cca7a1c002b54a5..f603012f945222e0f867d63a02349726ae722d6f 100644
--- a/src/main/java/net/minecraft/world/inventory/CraftingMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/CraftingMenu.java
@@ -88,7 +88,7 @@ public class CraftingMenu extends RecipeBookMenu<CraftingContainer> {
 
             resultInventory.setItem(0, itemstack);
             handler.setRemoteSlot(0, itemstack);
-            entityplayer.connection.send(new ClientboundContainerSetSlotPacket(handler.containerId, handler.incrementStateId(), 0, itemstack));
+            entityplayer.connection.send(new ClientboundContainerSetSlotPacket(handler.containerId, handler.incrementStateId(), 0, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(itemstack, ((ServerPlayer) player).adventure$locale))); // CloudPlane - localize item names and lore
         }
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index aad35b054114366cbf0ab2e232efb97419142d57..f2bf33e4d1c812cf03f38989cffe910ae32625f3 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -2464,7 +2464,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         final int stateId = getHandle().containerMenu.getStateId();
         connection.send(new net.minecraft.network.protocol.game.ClientboundContainerSetSlotPacket(0, stateId, slot, item));
         connection.send(new net.minecraft.network.protocol.game.ClientboundOpenBookPacket(net.minecraft.world.InteractionHand.MAIN_HAND));
-        connection.send(new net.minecraft.network.protocol.game.ClientboundContainerSetSlotPacket(0, stateId, slot, inventory.getSelected()));
+        connection.send(new net.minecraft.network.protocol.game.ClientboundContainerSetSlotPacket(0, stateId, slot, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(inventory.getSelected(), locale()))); // CloudPlane - localize item names and lore
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryPlayer.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryPlayer.java
index d6a228473ca6f425757683a4b17b035a53ab117f..fbecdbcf59eaaa559a077ae8311c1d90baa5889b 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryPlayer.java
@@ -110,7 +110,7 @@ public class CraftInventoryPlayer extends CraftInventory implements org.bukkit.i
         } else if (index > 35) {
             index = 8 - (index - 36);
         }
-        player.connection.send(new ClientboundContainerSetSlotPacket(player.inventoryMenu.containerId, player.inventoryMenu.incrementStateId(), index, CraftItemStack.asNMSCopy(item)));
+        player.connection.send(new ClientboundContainerSetSlotPacket(player.inventoryMenu.containerId, player.inventoryMenu.incrementStateId(), index, io.papermc.paper.adventure.PaperAdventure.renderNMSItem(CraftItemStack.asNMSCopy(item), player.adventure$locale))); // CloudPlane - localize item names and lore
     }
 
     @Override
diff --git a/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java b/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
index 18ee11c9fdc1a47515d7557c963179a2fe5116c6..2460a2c4c27c59b6ceee9b36a356ad34ba358485 100644
--- a/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
+++ b/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
@@ -163,4 +163,15 @@ public class CloudPlaneConfig {
         ipBannedReason = getString("settings.banning.messages.ip-banned.reason", ipBannedReason);
         ipBannedExpiration = getString("settings.banning.messages.ip-banned.expiration", ipBannedExpiration);
     }
+
+    public static boolean localizeItems = false;
+    private static void adventure() {
+        if (currentVersion == 2) {
+            localizeItems = getBoolean("settings.localize.items", localizeItems);
+            set("settings.adventure.localize-items", localizeItems);
+            set("settings.localize", null);
+        } else {
+            localizeItems = getBoolean("settings.adventure.localize-items", localizeItems);
+        }
+    }
 }
