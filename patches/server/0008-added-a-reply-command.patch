From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Fri, 2 Jul 2021 13:34:31 +0200
Subject: [PATCH] added a reply command


diff --git a/src/main/java/net/minecraft/server/commands/MsgCommand.java b/src/main/java/net/minecraft/server/commands/MsgCommand.java
index 1326e7d09e25b19b6f8a3911b3a3944514d77173..ac1c3687193406864adbd36c2143a45fa9fa5b20 100644
--- a/src/main/java/net/minecraft/server/commands/MsgCommand.java
+++ b/src/main/java/net/minecraft/server/commands/MsgCommand.java
@@ -43,6 +43,12 @@ public class MsgCommand {
         for(ServerPlayer serverPlayer2 : targets) {
             consumer.accept(serverPlayer2.getDisplayName());
             serverPlayer2.sendMessage((new TranslatableComponent("commands.message.display.incoming", source.getDisplayName(), message)).withStyle(new ChatFormatting[]{ChatFormatting.GRAY, ChatFormatting.ITALIC}), uUID);
+            // CloudPlane start - reply command
+            if (entity instanceof ServerPlayer) {
+                ((ServerPlayer) entity).replyTarget = serverPlayer2;
+                serverPlayer2.replyTarget = ((ServerPlayer) entity);
+            }
+            // CloudPlane end
         }
 
         return targets.size();
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 8102ee4cc9f936de20a0cb6875ada524800f28f7..e7c9de76eb29936b6e6cc0a09e0e7bf04d1d16a8 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -185,6 +185,7 @@ public abstract class Player extends LivingEntity {
     public boolean isCritical = false; // Purpur
     public boolean flyingFallDamage = false; // Purpur
     public boolean canPortalInstant = false; // Purpur
+    public Player replyTarget; // CloudPlane - reply command
 
     // CraftBukkit start
     public boolean fauxSleeping;
diff --git a/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java b/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
index 7c5cbfd668b5c56dc0ee7d55881592970ad93744..51d00e0cfc6a4b3967514a747a9f9988604a4bbc 100644
--- a/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
+++ b/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
@@ -64,6 +64,7 @@ public class CloudPlaneConfig {
 
         commands.add(new tk.booky.cloudplane.commands.FlyCommand());
         commands.add(new tk.booky.cloudplane.commands.LobbyCommand());
+        commands.add(new tk.booky.cloudplane.commands.ReplyCommand());
 
         commands.forEach(command -> command.register(dispatcher));
     }
diff --git a/src/main/java/tk/booky/cloudplane/commands/ReplyCommand.java b/src/main/java/tk/booky/cloudplane/commands/ReplyCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..672e538f8b5561de2e37d1b51cce61dd7ab38e0b
--- /dev/null
+++ b/src/main/java/tk/booky/cloudplane/commands/ReplyCommand.java
@@ -0,0 +1,39 @@
+package tk.booky.cloudplane.commands;
+
+import com.mojang.brigadier.CommandDispatcher;
+import com.mojang.brigadier.exceptions.CommandSyntaxException;
+import com.mojang.brigadier.tree.LiteralCommandNode;
+import net.minecraft.ChatFormatting;
+import net.minecraft.commands.CommandSourceStack;
+import net.minecraft.commands.Commands;
+import net.minecraft.commands.arguments.MessageArgument;
+import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.server.level.ServerPlayer;
+
+public class ReplyCommand implements CloudPlaneCommand {
+
+    @Override
+    public void register(CommandDispatcher<CommandSourceStack> dispatcher) {
+        LiteralCommandNode<CommandSourceStack> node = dispatcher.register(Commands.literal("reply")
+                .requires((listener) -> listener.hasPermission(1, "bukkit.command.reply"))
+                .then(Commands.argument("message", MessageArgument.message())
+                        .executes((context) -> execute(context.getSource(), MessageArgument.getMessage(context, "message")))));
+
+        dispatcher.register(Commands.literal("r").requires((listener) -> listener.hasPermission(1, "bukkit.command.reply")).redirect(node));
+    }
+
+    private int execute(CommandSourceStack sender, Component message) throws CommandSyntaxException {
+        ServerPlayer player = sender.getPlayerOrException();
+
+        if (player.replyTarget == null) {
+            sender.sendFailure(new TextComponent("You have not received or send a message to a player recently!"));
+        } else {
+            player.sendMessage(new TranslatableComponent("commands.message.display.outgoing", player.replyTarget.getDisplayName(), message).withStyle(ChatFormatting.GRAY, ChatFormatting.ITALIC), player.getUUID());
+            player.replyTarget.sendMessage(new TranslatableComponent("commands.message.display.incoming", sender.getDisplayName(), message).withStyle(ChatFormatting.GRAY, ChatFormatting.ITALIC), player.getUUID());
+        }
+
+        return 1;
+    }
+}
