From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <github@booky.tk>
Date: Fri, 25 Jun 2021 22:20:11 +0200
Subject: [PATCH] added fly command using brigadier


diff --git a/src/main/java/net/minecraft/commands/Commands.java b/src/main/java/net/minecraft/commands/Commands.java
index bef1f6ca54fc6c1741b54b8e071a90eb5e3a36f3..5fbab336fd11837ed60909ace0b517e3e8b10b77 100644
--- a/src/main/java/net/minecraft/commands/Commands.java
+++ b/src/main/java/net/minecraft/commands/Commands.java
@@ -202,6 +202,7 @@ public class Commands {
             net.pl3x.purpur.command.DemoCommand.register(this.dispatcher); // Purpur
             net.pl3x.purpur.command.PingCommand.register(this.dispatcher); // Purpur
             net.pl3x.purpur.command.TPSBarCommand.register(this.dispatcher); // Purpur
+            tk.booky.cloudplane.commands.FlyCommand.register(this.dispatcher); // CloudPlane
         }
 
         if (environment.includeIntegrated) {
diff --git a/src/main/java/tk/booky/cloudplane/commands/FlyCommand.java b/src/main/java/tk/booky/cloudplane/commands/FlyCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..ff6a87aabef5b50610be53509afffb93d788bf72
--- /dev/null
+++ b/src/main/java/tk/booky/cloudplane/commands/FlyCommand.java
@@ -0,0 +1,52 @@
+package tk.booky.cloudplane.commands;
+// Created by booky10 in CloudPlane (22:08 25.06.21)
+
+import com.mojang.brigadier.CommandDispatcher;
+import com.mojang.brigadier.arguments.BoolArgumentType;
+import net.minecraft.commands.CommandSourceStack;
+import net.minecraft.commands.Commands;
+import net.minecraft.commands.arguments.EntityArgument;
+import net.minecraft.server.level.ServerPlayer;
+import org.bukkit.entity.Player;
+
+import java.util.Collection;
+import java.util.Collections;
+
+public class FlyCommand {
+
+    public static void register(CommandDispatcher<CommandSourceStack> dispatcher) {
+        dispatcher.register(Commands.literal("fly")
+                .requires((listener) -> listener.hasPermission(2))
+                .executes((context) -> execute(context.getSource(), Collections.singleton(context.getSource().getPlayerOrException())))
+                .then(Commands.argument("targets", EntityArgument.players())
+                        .executes((context) -> execute(context.getSource(), EntityArgument.getPlayers(context, "targets")))
+                        .then(Commands.argument("allow", BoolArgumentType.bool())
+                                .executes((context) -> execute(context.getSource(), EntityArgument.getPlayers(context, "targets"), BoolArgumentType.getBool(context, "allow")))
+                        )
+                )
+        ).setPermission("bukkit.command.fly");
+    }
+
+    private static int execute(CommandSourceStack sender, Collection<ServerPlayer> targets, boolean allowFlight) {
+        for (ServerPlayer player : targets) {
+            Player bukkit = player.getBukkitEntity();
+
+            bukkit.setAllowFlight(allowFlight);
+            sender.sendSuccess(player.getGameProfile().getName() + "'s fly mode was " + (allowFlight ? "enabled" : "disabled"), true);
+        }
+
+        return targets.size();
+    }
+
+    private static int execute(CommandSourceStack sender, Collection<ServerPlayer> targets) {
+        for (ServerPlayer player : targets) {
+            Player bukkit = player.getBukkitEntity();
+            boolean allowFlight = !bukkit.getAllowFlight();
+
+            bukkit.setAllowFlight(allowFlight);
+            sender.sendSuccess(player.getGameProfile().getName() + "'s fly mode was " + (allowFlight ? "enabled" : "disabled"), true);
+        }
+
+        return targets.size();
+    }
+}
\ No newline at end of file
