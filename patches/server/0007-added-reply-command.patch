From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: booky10 <boooky10@gmail.com>
Date: Fri, 2 Jul 2021 13:34:31 +0200
Subject: [PATCH] added reply command


diff --git a/src/main/java/net/minecraft/server/commands/MsgCommand.java b/src/main/java/net/minecraft/server/commands/MsgCommand.java
index 1326e7d09e25b19b6f8a3911b3a3944514d77173..43c95115a14401d128026bf7ef623f0aff5de1dd 100644
--- a/src/main/java/net/minecraft/server/commands/MsgCommand.java
+++ b/src/main/java/net/minecraft/server/commands/MsgCommand.java
@@ -43,6 +43,12 @@ public class MsgCommand {
         for(ServerPlayer serverPlayer2 : targets) {
             consumer.accept(serverPlayer2.getDisplayName());
             serverPlayer2.sendMessage((new TranslatableComponent("commands.message.display.incoming", source.getDisplayName(), message)).withStyle(new ChatFormatting[]{ChatFormatting.GRAY, ChatFormatting.ITALIC}), uUID);
+            // CloudPlane start
+            if (entity instanceof ServerPlayer) {
+                ((ServerPlayer) entity).replyTarget = serverPlayer2;
+                serverPlayer2.replyTarget = ((ServerPlayer) entity);
+            }
+            // CloudPlane end
         }
 
         return targets.size();
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 2c00a766130a7f682fc6c4c74321e10637ca7932..62d36c43934e87eed40a819ad36cf1c00c533b7a 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -190,6 +190,7 @@ public abstract class Player extends LivingEntity {
         return (CraftHumanEntity) super.getBukkitEntity();
     }
     // CraftBukkit end
+    @Nullable public Player replyTarget; // CloudPlane - reply command
 
     public Player(Level world, BlockPos pos, float yaw, GameProfile profile) {
         super(EntityType.PLAYER, world);
diff --git a/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java b/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
index c9122bab8b791d3a1fdfd9e23dad44eb334fbb6c..490b31ffc84d6af69fed7666766eb6d54675b5d9 100644
--- a/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
+++ b/src/main/java/tk/booky/cloudplane/CloudPlaneConfig.java
@@ -64,6 +64,7 @@ public class CloudPlaneConfig {
 
         commands.add(new tk.booky.cloudplane.commands.FlyCommand());
         commands.add(new tk.booky.cloudplane.commands.LobbyCommand());
+        commands.add(new tk.booky.cloudplane.commands.ReplyCommand());
 
         commands.forEach(command -> command.register(dispatcher));
     }
diff --git a/src/main/java/tk/booky/cloudplane/commands/ReplyCommand.java b/src/main/java/tk/booky/cloudplane/commands/ReplyCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..a74efad770ed123dbabaec5727f72e51705c51a0
--- /dev/null
+++ b/src/main/java/tk/booky/cloudplane/commands/ReplyCommand.java
@@ -0,0 +1,43 @@
+package tk.booky.cloudplane.commands;
+// Created by booky10 in CloudPlane (15:08 04.12.21)
+
+import com.mojang.brigadier.CommandDispatcher;
+import com.mojang.brigadier.exceptions.CommandSyntaxException;
+import com.mojang.brigadier.tree.LiteralCommandNode;
+import net.minecraft.ChatFormatting;
+import net.minecraft.commands.CommandSourceStack;
+import net.minecraft.commands.Commands;
+import net.minecraft.commands.arguments.MessageArgument;
+import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.server.level.ServerPlayer;
+
+public class ReplyCommand implements CloudPlaneCommand {
+
+    @Override
+    public void register(CommandDispatcher<CommandSourceStack> dispatcher) {
+        LiteralCommandNode<CommandSourceStack> node = dispatcher.register(Commands.literal("reply")
+                .requires((listener) -> listener.hasPermission(1, "cloudplane.command.reply"))
+                .then(Commands.argument("message", MessageArgument.message())
+                        .executes((context) -> execute(context.getSource(), MessageArgument.getMessage(context, "message")))));
+
+        dispatcher.register(Commands.literal("r")
+                .requires((listener) -> listener.hasPermission(1, "cloudplane.command.reply"))
+                .redirect(node));
+    }
+
+    private int execute(CommandSourceStack sender, Component message) throws CommandSyntaxException {
+        ServerPlayer player = sender.getPlayerOrException();
+
+        if (player.replyTarget == null) {
+            sender.sendFailure(new TextComponent("You have not received or sent a message to a player recently"));
+        } else {
+            player.sendMessage(new TranslatableComponent("commands.message.display.outgoing", player.replyTarget.getDisplayName(), message).withStyle(ChatFormatting.GRAY, ChatFormatting.ITALIC), player.getUUID());
+            player.replyTarget.sendMessage(new TranslatableComponent("commands.message.display.incoming", sender.getDisplayName(), message).withStyle(ChatFormatting.GRAY, ChatFormatting.ITALIC), player.getUUID());
+            player.replyTarget.replyTarget = player;
+        }
+
+        return 1;
+    }
+}
